[{"path":[]},{"path":"https://docs.ropensci.org/mapscanner/CONTRIBUTING.html","id":"opening-issues","dir":"","previous_headings":"","what":"Opening issues","title":"Contributing to mapscanner","text":"easiest way note behavioural curiosities request new features opening github issue.","code":""},{"path":"https://docs.ropensci.org/mapscanner/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to mapscanner","text":"’d like contribute changes mapscanner, use GitHub flow proposing, submitting, reviewing, accepting changes. haven’t done , ’s nice overview git , well best practices submitting pull requests . mapscanner coding style diverges somewhat commonly used R style guide, primarily following two ways, improve code readability: (1) curly braces vertically aligned: (2) Also highlighted code additional whitespace permeates mapscanner code. Words text separated whitespace, code words : natural result one ends writing space function (). ’s .","code":"this <- function () {     x <- 1 } this <- function(){     x <- 1 } this <- function1 (function2 (x)) this <- function1(function2(x)) this <- function ()"},{"path":"https://docs.ropensci.org/mapscanner/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to mapscanner","text":"want encourage warm, welcoming, safe environment contributing project. See code conduct information.","code":""},{"path":"https://docs.ropensci.org/mapscanner/articles/mapscanner.html","id":"what-does-this-package-do-for-me","dir":"Articles","previous_headings":"","what":"What does this package do for me?","title":"mapscanner","text":"mapscanner R package enables lines drawn hand maps converted spatial objects. package two primary functions: one producing maps, one rectifying hand-drawn lines coordinate system original map. package intended use social surveys similar endeavours hand-drawn markings maps need converted spatial objects. Maps can either paper- screen-based. Markings paper maps need scanned, photographed, otherwise digitised, maps screen-based markings need saved .png- .pdf-format images.","code":""},{"path":"https://docs.ropensci.org/mapscanner/articles/mapscanner.html","id":"how-do-i-use-it","dir":"Articles","previous_headings":"","what":"How do I use it?","title":"mapscanner","text":"package designed enable following workflow: Generate map ms_generate_map() function, automatically produces .pdf .png versions; Either print .pdf version use desired kind survey environment, use either .pdf .png versions digital form screen-based surveys. Draw map; paper maps, digitise drawn-(, “modified”) map, converting either .pdf .png format; Rectify modified version original via ms_rectify_map() function, distinguishes individual annotations, converts one spatial object able analysed desired manner.","code":""},{"path":"https://docs.ropensci.org/mapscanner/articles/mapscanner.html","id":"practical-tips","dir":"Articles","previous_headings":"How do I use it?","what":"Practical tips","title":"mapscanner","text":"mapscanner package intended aid practical workflow, practical tips may recommended ensure best results: original digital files generated ms_generate_map() necessary rectify subsequently drawn-scanned maps, must retained times. Marks drawn maps coloured – black grey markings ignored. advantage individual annotations intended converted spatial objects (unique identification participant codes) may made maps black grey. drawings areas, best results achieved ensuring lines form closed polygons. default type = \"hulls\" argument work even lines closed, type = \"polygons\" argument generally produce accurate results, yet used lines form closed polygons (see details two differ). Digitised versions paper maps contain white borders, , example, photograph modified maps lying dark surfaces. maps photographed, best results can achieved simply placing larger, enclosing sheet white paper. following two sections describe two primary functions mapscanner package, corresponding two primary steps producing maps used surveys (activities), rectifying modified maps originals order extract spatial objects. second sections also describes kinds markings able recognised, kinds spatial objects may converted.","code":""},{"path":"https://docs.ropensci.org/mapscanner/articles/mapscanner.html","id":"mapbox-api-tokens","dir":"Articles","previous_headings":"","what":"Mapbox API tokens","title":"mapscanner","text":"Map generation mapscanner requires personal token key mapbox, can obtained following links https://docs.mapbox.com/api/. already token, easiest way use mapscanner create (edit) file ~/.Renviron, insert line, available every time start R, without need explicitly set token time want use package. token may given unique name includes “mapbox” (case insensitive). Alternatively, wish keep token truly private, use current R session, may load mapscanner, run set_mapbox_token(<my_mapbox_token>).","code":"MAPBOX_TOKEN=<my_mapbox_token>"},{"path":"https://docs.ropensci.org/mapscanner/articles/mapscanner.html","id":"map-generation","dir":"Articles","previous_headings":"","what":"Map generation","title":"mapscanner","text":"obtained set mapbox token described , ms_generate_map() function can used generate printable maps specified bounding box .pdf .png formats. Usage simple , two generated maps saved current working directory (getwd()). save maps alternative locations, mapname parameter can optionally specify paths. provide finer control scales maps, precise bounding boxes can also submitted. determine desired bounding boxes, recommend using ‘openstreetmap.org’ website, zooming desired area, clicking “Export” button. window appear includes bounding coordinates current screen. Even finer control can gained clicking beneath coordinate window line says, “Manually select different area,” brings drag-able rectangle onto current screen. coordinates bounding box simply need entered bbox parameter ms_generate_map() order (xmin, ymin, xmax, ymax) – anti-clockwise left-hand coordinate. amount detail resultant maps controlled max_tiles argument, larger values producing detail, resulting larger file sizes. default value max_tiles = 16L (L symbol tells Rto treat value integer) produce acceptable results maps extending across hundreds metres kilometres. Smaller-scale maps may require higher values, vice-versa. Map generation relatively fast, different values can readily trialled. Maps generated two formats, .pdf version generally convenient printing, png version retained “master” copy rectify subsequently scanned-version. Behind scenes, function downloads series vector map tiles mapbox, converts rasterBrick object raster package. rasterBrick object invisibly returned function: rasterBrick object contains raster information three colour channels image, may also used immediate viewing within R raster::plotRGB(x). Standard uses package need explicitly access modify data, nevertheless possible , use custom-modified object produce external .pdf .png files submitting rasterBrick object ms_generate_map():","code":"ms_generate_map (\"chennai india\", mapname = \"chennai\") ## Successfully generated 'chennai.pdf' and 'chennai.png' x <- ms_generate_map (\"chennai india\", mapname = \"chennai\") ## Successfully generated 'chennai.pdf' and 'chennai.png' x ## class      : RasterBrick ## dimensions : 1147, 562, 644614, 3  (nrow, ncol, ncell, nlayers) ## resolution : 38.21851, 38.21851  (x, y) ## extent     : 8921157, 8942635, 1442787, 1486624  (xmin, xmax, ymin, ymax) ## crs        : +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs ## source     : memory ## names      : index_1.1, index_1.2, index_1.3 ## min values :       107,       107,       107 ## max values :       254,       254,       254 ms_generate_map (raster_brick = x, mapname = \"chennai\")"},{"path":"https://docs.ropensci.org/mapscanner/articles/mapscanner.html","id":"map-rectification","dir":"Articles","previous_headings":"","what":"Map rectification","title":"mapscanner","text":"produced digital maps using ms_generate_map() function described , printed, variously drawn-, , paper maps, scanned result back digital form, package can used rectify hand-drawn markings original map ms_rectify_map() function, returns drawn-objects spatial objects Simple Features (sf) format. requirement drawn-objects coloured; black grey objects ignored. described , advantage maps may annotated ways intended converted spatial objects (adding unique identification participant codes), simply providing annotations grey black. ms_rectify_map() function two primary arguments, specifying names (locations) original modified map files – order: ms_rectify_map(original, modified). files ideally .png formats, auto-converted .pdf needed. package comes two sample maps, .png format. first reference version needed rectification, second two red lines drawn upon :  Converting lines scanned image file simple : result ms_rectify_map() can plotted using standard option plotting spatial data, online mapping packages mapview:","code":"f_orig <- system.file (\"extdata\", \"omaha.png\", package = \"mapscanner\") f_mod <- system.file (\"extdata\", \"omaha-polygons.png\", package = \"mapscanner\") xy <- ms_rectify_map (f_orig, f_mod, nitems = 2) xy ## Simple feature collection with 2 features and 0 fields ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: -96.11801 ymin: 41.26638 xmax: -96.02722 ymax: 41.30108 ## Geodetic CRS:  WGS 84 ##                         geometry ## 1 POLYGON ((-96.10692 41.2684... ## 2 POLYGON ((-96.0276 41.2964,... xy$id <- seq (nrow (xy)) mapview::mapview (xy)"},{"path":"https://docs.ropensci.org/mapscanner/articles/mapscanner.html","id":"types-of-map-markings-and-types-of-spatial-objects","dir":"Articles","previous_headings":"Map rectification","what":"Types of map markings and types of spatial objects","title":"mapscanner","text":"ms_rectify_map() function additional argument, type, takes following values: type = \"hulls\" (default), returns convex concave hulls around distinct sets contiguously marked lines, regardless whether lines form closed polygons (see function help details). type = \"polygons\", returns outlines traced around individual drawn object. tracing pixel-based, resulting polygons one spatial point scanned pixel. may generate spatial objects overly large well visually pixillated. function includes additional downsample parameter -samples smooths resultant polygons specified multiple. type = \"points\", returns single points (geometric centroids) object. useful identification individual point locations regardless kinds marks actually drawn map (dots, circles, crosses, shape, give equivalent results). type polygons assumes – indeed requires – drawn objects closed polygons (illustrated first figures), care must taken ensure fact case. lines form closed circles appropriately translated. Algorithms extracting objects type = \"polygons\"fundamentally different type = \"hulls\". latter applies convex concave-hull tracing algorithms, former explicitly traces every individual pixel contiguous object, returns external boundary comprised coordinates pixels lying boundary. thus often produce accurate detailed results, yet mentioned applied markings form strictly closed polygons. cases areal rather point-based results desired use default type = \"hulls\". Examples include participants asked colour particular areas using desired kind marks, enabling areal-filling scribbles can converted polygons representing outer boundaries. \"polygon\" \"point\" types illustrated following maps:","code":"f_orig <- system.file (\"extdata\", \"omaha.png\", package = \"mapscanner\") f_mod <- system.file (\"extdata\", \"omaha-polygons.png\", package = \"mapscanner\") xy <- ms_rectify_map (f_orig, f_mod, type = \"polygons\", quiet = TRUE) xy$id <- seq (nrow (xy)) mapview::mapview (xy) f_orig <- system.file (\"extdata\", \"omaha.png\", package = \"mapscanner\") f_mod <- system.file (\"extdata\", \"omaha-polygons.png\", package = \"mapscanner\") xy <- ms_rectify_map (f_orig, f_mod, type = \"points\", quiet = TRUE) xy$id <- seq (nrow (xy)) mapview::mapview (xy)"},{"path":"https://docs.ropensci.org/mapscanner/articles/mapscanner.html","id":"bonus-feature-polygon-aggregation","dir":"Articles","previous_headings":"","what":"Bonus Feature: Polygon Aggregation","title":"mapscanner","text":"Maps typically used social surveys delineate participants’ understanding perception particular regions areas. contexts, surveys often result numerous polygonal shapes representing different perceptions particular region. mapscanner package provides additional function, ms_aggregate_polys(), aggregate polygons single “heat map” containing vector outlines aggregated polygons. component aggregated polygons defines region within n polygons overlap. function now illustrated slightly complicated version example provided ms_aggregate_polys(), starting generating series polygons convex hulls surrounding random points. polys object Simple Features (sf) data.frame n overlapping polygons, additional row, n, identify polygon. following lines convert aggregated, overlapping polygons, plot result:  left panel figure shows random polygons raw form successively overlaid upon one another. right panel shows aggregated contours successive overlap 1 5. object returned ms_aggregate_polys() contains polygons ordered level aggregation (n), first entirely encloses second; second encloses third; . Particular contours can directly selected filtering desired values n:  Polygon aggregation enables many interesting analyses performed, relationships aggregation level area:  result course (roughly) linear, derived random data. actual usage, results likely generate direct insight consensus opinion regarding people understand particular areas.","code":"n <- 5 # number of polygons polys <- lapply (seq (n), function (i) {                      nxy <- 20 # number of points used to generate hull                      xy <- matrix (runif (2 * nxy), ncol = 2)                      h <- chull (xy)                      sf::st_polygon (list (xy [c (h, h [1]), ]))             }) polys <- sf::st_sf (n = seq (n), geometry = polys) aggr <- ms_aggregate_polys (polys) polys$type <- \"raw polygons\" aggr$type <- \"aggregated polygons\" polys <- rbind (polys, aggr) # Convert type to factor to order facets: polys$type <- factor (polys$type, levels = c (\"raw polygons\", \"aggregated polygons\")) library (ggplot2) ggplot (polys, aes (fill = n)) + geom_sf () + facet_wrap (~type) ggplot (aggr [aggr$n %in% c (1, 3, 5), ], aes (fill = n)) + geom_sf () aggr$area <- sf::st_area (aggr) ggplot (aggr, aes (x = n, y = area)) + geom_line (size = 2) ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated."},{"path":"https://docs.ropensci.org/mapscanner/articles/mapscanner.html","id":"how-it-works","dir":"Articles","previous_headings":"","what":"How it works","title":"mapscanner","text":"(section necessary package usage, merely provides detail interested process actually works.) mapscanner primarily relies RNiftyReg package rectify images. package primarily aimed rectifying medical scans, also happens perfect tool present purposes. image analysis software, library requires image objects, pdf files, ms_generate_map() function produces kinds files - .pdf printing .png rectifying RNiftyReg package. Rectification re-projects scanned image back coordinate system original image. coordinate system translates defined bounding box (may differ slightly values input function, due cutting stitching vector tiles). bounding box embedded meta-information files produced ms_generate_map(); .pdf standard meta information accessible R like : terminal via pdfinfo (non-linux equivalent), embedded .png file comment, accessible like : terminal via identify -verbose command (part imagemagick library drives magick R package).","code":"pdftools::pdf_info (\"chennai.pdf\")$keys ## $Title ## [1] \"EX8921118.44521949+1442748.9088827+8942673.68719591+1486623.76311839\" ##  ## $Producer ## [1] \"R 4.0.0\" ##  ## $Creator ## [1] \"R\" img <- magick::image_read (\"chennai.png\") magick::image_comment (img) ## [1] \"EX8921118.44521949+1442748.9088827+8942673.68719591+1486623.76311839\""},{"path":"https://docs.ropensci.org/mapscanner/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Padgham. Author, maintainer. Michael D. Sumner. Author. Kelly Hondula. Reviewer.            Kelly reviewed package rOpenSci, see https://github.com/ropensci/software-review/issues/330 Nicholas Potter. Reviewer.            Nichola reviewed package rOpenSci, see https://github.com/ropensci/software-review/issues/330 Stanislaw Adaszewski. Copyright holder.            author include concaveman-cpp code","code":""},{"path":"https://docs.ropensci.org/mapscanner/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Padgham M, Sumner M (2024). mapscanner: Print Maps, Draw , Scan Back . R package version 0.0.6.005, https://github.com/ropensci/mapscanner.","code":"@Manual{,   title = {mapscanner: Print Maps, Draw on Them, Scan Them Back in},   author = {Mark Padgham and Michael D. Sumner},   year = {2024},   note = {R package version 0.0.6.005},   url = {https://github.com/ropensci/mapscanner}, }"},{"path":[]},{"path":"https://docs.ropensci.org/mapscanner/index.html","id":"what-does-this-package-do-for-me","dir":"","previous_headings":"","what":"What does this package do for me?","title":"Print Maps, Draw on Them, Scan Them Back in","text":"mapscanner R package enables lines drawn hand maps converted spatial objects. package two primary functions: one producing maps, one rectifying hand-drawn lines coordinate system original map. package intended use social surveys similar endeavours hand-drawn markings maps need converted spatial objects. Maps can either paper- screen-based. Markings paper maps need scanned, photographed, otherwise digitised, maps screen-based markings need saved .png-format images.","code":""},{"path":"https://docs.ropensci.org/mapscanner/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Print Maps, Draw on Them, Scan Them Back in","text":"current stable version can installed CRAN : Alternatively, development version can installed via rOpenSci’s r-universe running following prior calling install.packages(): package can loaded usage R session ","code":"install.packages (\"mapscanner\") options(repos = c(                   ropensci = 'https://ropensci.r-universe.dev',                   CRAN = 'https://cloud.r-project.org')) library (mapscanner)"},{"path":"https://docs.ropensci.org/mapscanner/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Print Maps, Draw on Them, Scan Them Back in","text":"package designed enable following workflow: Generate map ms_generate_map() function, automatically produces .pdf .png versions; Either print .pdf version use desired kind survey environment, use either .pdf .png versions digital form screen-based surveys. Draw map; paper maps, digitise drawn-(, “modified”) map, converting either .pdf .png format; Rectify modified version original via ms_rectify_map() function, distinguishes individual annotations, converts one spatial object able analysed desired manner.","code":""},{"path":"https://docs.ropensci.org/mapscanner/index.html","id":"practical-tips","dir":"","previous_headings":"Usage","what":"Practical tips","title":"Print Maps, Draw on Them, Scan Them Back in","text":"mapscanner package intended aid practical workflow, practical tips may recommended ensure best results: original digital files generated ms_generate_map() necessary rectify subsequently drawn-scanned maps, must retained times. Marks drawn maps coloured – black grey markings ignored. advantage individual annotations intended converted spatial objects (unique identification participant codes) may made maps black grey. drawings areas, best results achieved ensuring lines form closed polygons. default type = \"hulls\" argument work even lines closed, type = \"polygons\" argument generally produce accurate results, yet used lines form closed polygons (see details two differ). Digitised versions paper maps contain white borders, , example, photograph modified maps lying dark surfaces. maps photographed, best results can achieved simply placing larger, enclosing sheet white paper. following two sections describe two primary functions mapscanner package, corresponding two primary steps producing maps used surveys (activities), rectifying modified maps originals order extract spatial objects. second sections also describes kinds markings able recognised, kinds spatial objects may converted.","code":""},{"path":"https://docs.ropensci.org/mapscanner/index.html","id":"mapbox-api-tokens","dir":"","previous_headings":"Usage","what":"Mapbox API tokens","title":"Print Maps, Draw on Them, Scan Them Back in","text":"Map generation mapscanner requires personal token key mapbox, can obtained following links https://docs.mapbox.com/api. already token, easiest way use mapscanner create (edit) file ~/.Renviron, insert line, available every time start R, without need explicitly set token time want use package. token may given unique name includes “mapbox” (case insensitive). Alternatively, wish keep token truly private, use current R session, may load mapscanner, run set_mapbox_token(<my_mapbox_token>).","code":"MAPBOX_TOKEN=<my_mapbox_token>"},{"path":"https://docs.ropensci.org/mapscanner/index.html","id":"map-generation","dir":"","previous_headings":"Usage","what":"Map generation","title":"Print Maps, Draw on Them, Scan Them Back in","text":"obtained set mapbox token described , mapscanner may used generate maps. package comes sample map Omaha, Nebraska, USA, one red lines drawn : ’s just standard png image notion geographical coordinates. original map generated indicated, function generates map .pdf .png formats. files must retained “master” maps subsequently modified – drawn-scanned-– versions rectified.","code":"bbox <- rbind (c (-96.12923, -96.01011),                c (41.26145, 41.32220)) # portion of omaha ms_generate_map (bbox, max_tiles = 16L, mapname = \"omaha\") #> Successfully generated 'omaha.pdf' and 'omaha.png'"},{"path":"https://docs.ropensci.org/mapscanner/index.html","id":"map-rectification","dir":"","previous_headings":"Usage","what":"Map rectification","title":"Print Maps, Draw on Them, Scan Them Back in","text":"magic within mapscanner package happens via RNiftyReg package, primarily intended align brain scans medical images, precisely tool needed . package comes two sample .png images can used demonstrate map rectification. following code, f_modified image shown , modified original drawing red line around particular region Omaha. rectification can take quite time, RNiftyReg package constructing best transformation modified image back original. result ms_rectify_map() spatial object sf-format drawn component represented separate polygon. Finally, can plot result interactive map using packages like mapview following commands: mapdeck, similarly requires mapbox token:  hand-drawn lines shown converted standard spatial objects able analysed desired way. See package vignette detail mapscanner package can .","code":"f_orig <- system.file (\"extdata\", \"omaha.png\", package = \"mapscanner\") f_mod <- system.file (\"extdata\", \"omaha-polygons.png\", package = \"mapscanner\") res <- ms_rectify_map (f_orig, f_mod, type = \"polygons\") #> ══ mapscanner ════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════ #> ✔ Image [/usr/lib/R/library/mapscanner/extdata/omaha.png] reduced in size by factor of 2 #> ❯ Rectifying the two maps ✔ Rectified the two maps   #> ❯ Estimating optimal signal-to-noise threshold✔ Estimated optimal signal-to-noise threshold #> ✔ Identified 2 objects #> ❯ Converting to spatial format ✔ Converted to spatial format res #> Simple feature collection with 2 features and 0 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -96.11814 ymin: 41.26638 xmax: -96.02722 ymax: 41.30109 #> Geodetic CRS:  WGS 84 #>                         geometry #> 1 POLYGON ((-96.11589 41.2663... #> 2 POLYGON ((-96.03544 41.2927... library (mapview) mapview (res) library (mapdeck) set_token (Sys.getenv (\"<my_mapbox_token>\")) mapdeck () %>%     add_polygon (res, fill_colour = \"#ffff00cc\",                  stroke_colour = \"#ff0000\", stroke_width = 20)"},{"path":"https://docs.ropensci.org/mapscanner/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Print Maps, Draw on Them, Scan Them Back in","text":"Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/mapscanner/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Print Maps, Draw on Them, Scan Them Back in","text":"contributions project gratefully acknowledged using allcontributors package following -contributors specification. Contributions kind welcome!","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/mapscanner/reference/mapscanner-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mapscanner: Print Maps, Draw on Them, Scan Them Back in — mapscanner-package","title":"mapscanner: Print Maps, Draw on Them, Scan Them Back in — mapscanner-package","text":"Enables preparation maps printed drawn . Modified maps can scanned back , hand-drawn marks converted spatial objects.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/mapscanner/reference/mapscanner-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mapscanner: Print Maps, Draw on Them, Scan Them Back in — mapscanner-package","text":"Maintainer: Mark Padgham mark.padgham@email.com Authors: Michael D. Sumner mdsumner@gmail.com contributors: Kelly Hondula (Kelly reviewed package rOpenSci, see https://github.com/ropensci/software-review/issues/330) [reviewer] Nicholas Potter (Nichola reviewed package rOpenSci, see https://github.com/ropensci/software-review/issues/330) [reviewer] Stanislaw Adaszewski (author include concaveman-cpp code) [copyright holder]","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_aggregate_polys.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate disparate polygons — ms_aggregate_polys","title":"Aggregate disparate polygons — ms_aggregate_polys","text":"Planar partition disparate polygon inputs. Overlaps aggregate n.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_aggregate_polys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate disparate polygons — ms_aggregate_polys","text":"","code":"ms_aggregate_polys(p)"},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_aggregate_polys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate disparate polygons — ms_aggregate_polys","text":"p input (multi-)polygons (assumed overlapping)","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_aggregate_polys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate disparate polygons — ms_aggregate_polys","text":"Set sf-format polygons additional column, n, denoting number overlaps contributing resultant polygons.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_aggregate_polys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate disparate polygons — ms_aggregate_polys","text":"Input single simple features polygon data frame. attribute data considered.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_aggregate_polys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate disparate polygons — ms_aggregate_polys","text":"","code":"g <- sf::st_sfc(list(sf::st_point(cbind(0, 0)),                      sf::st_point(cbind(0, 1)),                      sf::st_point(cbind(1, 0)))) pts <- sf::st_sf(a = 1:3,  geometry = g) overlapping_polys <- sf::st_buffer(pts, 0.75)  ## decompose and count space-filling from overlapping polygons x <- ms_aggregate_polys(overlapping_polys) plot(x)  if (FALSE) { library(ggplot2) ggplot(x) + geom_sf() + facet_wrap(~n) }  library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE set.seed(6) pts <- expand.grid (x = 1:8, y = 1:10) %>% st_as_sf (coords = c(\"x\", \"y\")) xsf <- sf::st_buffer (pts, runif (nrow (pts), 0.2, 1.5)) if (FALSE) { out <- ms_aggregate_polys (xsf) }"},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_generate_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate maps for 'mapscanner' use — ms_generate_map","title":"Generate maps for 'mapscanner' use — ms_generate_map","text":"Generate map image specified area bounding box, downloading tiles https://www.mapbox.com/. Map automatically saved .pdf .png formats, default current working directory, alternative location mapname includes full path.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_generate_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate maps for 'mapscanner' use — ms_generate_map","text":"","code":"ms_generate_map(   bbox,   max_tiles = 16L,   mapname = NULL,   bw = TRUE,   style = \"light\",   raster_brick = NULL )"},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_generate_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate maps for 'mapscanner' use — ms_generate_map","text":"bbox Either string specifying location, numeric bounding box single vector (xmin, ymin, xmax, ymax), 2--2 matrix columns (min, max) rows (x, y), respectively. max_tiles Maximum number tiles use create map mapname Name map produced, optionally including full path. Extension ignored. bw FALSE, print maps colour, otherwise black--white. Note default style = \"light\" monochrome, parameter effect style values \"streets\" \"outdoors\". style style map generated; one 'light', 'streets', 'outdoors', rendered black white. See https://docs.mapbox.com/api/maps/#styles/ examples. raster_brick Instead automatically downloading tiles within given bbox, pre-downloaded raster::rasterBrick object may submitted used generate .pdf .png equivalents.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_generate_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate maps for 'mapscanner' use — ms_generate_map","text":"Invisibly returns rasterBrick object raster package containing data used generate map.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_generate_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate maps for 'mapscanner' use — ms_generate_map","text":"","code":"if (FALSE) { # code used to generate internal files for a portion of Omaha: bb <- osmdata::getbb (\"omaha nebraska\") shrink <- 0.3 # shrink that bb to 30% size bb <- t (apply (bb, 1, function (i)                 mean (i) + c (-shrink, shrink) * diff (i) / 2)) ms_generate_map (bb, max_tiles = 16L, mapname = \"omaha\") }"},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_rectify_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Rectify one map to another — ms_rectify_map","title":"Rectify one map to another — ms_rectify_map","text":"Rectify two previously scanned-pdf png maps RNiftyReg, return modifications map_modified spatial objects sf format.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_rectify_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rectify one map to another — ms_rectify_map","text":"","code":"ms_rectify_map(   map_original,   map_modified,   nitems = NULL,   non_linear = 1,   type = \"hulls\",   downsample = 10,   concavity = 0,   length_threshold = 10,   quiet = FALSE )"},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_rectify_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rectify one map to another — ms_rectify_map","text":"map_original File name original map without anything drawn (either .pdf .png; extension ignored). map_modified File name modified version drawings (either .pdf .png; extension ignored). nitems Optional parameter explicitly specify number distinct items extracted map; possible, specifying parameter may improve results. non_linear Integer value 0, 1, 2 representing degree non-linearity modified image - see Note. type Currently either \"points\", \"polygons\", \"hulls\", \"points\" simply reduces distinct object single, central point; \"polygons\" identifies individual groups returns polygon representing outer boundary ; \"hulls\" constructs convex concave polygons around group. downsample Factor downsample type = \"polygons\", noting polygons initially include every outer pixel image, can generally downsampled least order magnitude (n = 10). Higher values may used higher-resolution images; lower values generally necessary low lower resolution images. concavity type = \"hulls\", value 0 1, 0 giving convex hulls 1 giving highly concave hulls. length_threshold type = \"hulls\", minimal length segment made convex. Low values produce highly detailed hulls may cause problems; doubt, odd results appear, increase value. quiet FALSE, display progress information screen","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_rectify_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rectify one map to another — ms_rectify_map","text":"sf object representing drawn additions map_modified.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_rectify_map.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rectify one map to another — ms_rectify_map","text":"non-linear parameter generally set according modified maps digitised. value 0 give fastest results, used directly scanned photocopied images. value 1 (default) still presumes modified images linearly translated, apply affine transformations (rotations, contractions, dilations). value used modified images photographed (potentially oblique angle). value 2 used modified maps somehow non-linearly distorted, example crumpled screwed . Rectification non-linear = 2 likely take considerably longer lower values.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_rotate_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate maps — ms_rotate_map","title":"Rotate maps — ms_rotate_map","text":"Display original modified maps determine necessary rotation","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_rotate_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate maps — ms_rotate_map","text":"","code":"ms_rotate_map(map_original, map_modified, rotation = 0, apply_rotation = FALSE)"},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_rotate_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate maps — ms_rotate_map","text":"map_original File name original map without anything drawn (either .pdf .png; extension ignored). map_modified File name modified version drawings (either .pdf .png; extension ignored). rotation Rotation value applied, generally +/- 90 apply_rotation FALSE, display results rotation without actually applying ; otherwise transform specified map_modified image according specified rotation.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_rotate_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate maps — ms_rotate_map","text":"return value. Function either modifies files disk rotating images specified amount (apply_rotation = TRUE), displays rotated version map_original (apply_rotation = FALSE).","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/ms_rotate_map.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rotate maps — ms_rotate_map","text":"call ms_rectify_map detects potential image rotation, function stop suggest rotation applied using function order determine required degree image rotation. Values rotation can trialled order determine correct value, following value can entered apply_rotation = TRUE order actually apply rotation modified image.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Pipe operator","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://docs.ropensci.org/mapscanner/reference/set_mapbox_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Set 'mapbox' token — set_mapbox_token","title":"Set 'mapbox' token — set_mapbox_token","text":"Set mapbox token use ms_generate_map function.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/set_mapbox_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set 'mapbox' token — set_mapbox_token","text":"","code":"set_mapbox_token(token)"},{"path":"https://docs.ropensci.org/mapscanner/reference/set_mapbox_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set 'mapbox' token — set_mapbox_token","text":"token Personal mapbox API token, obtained https://docs.mapbox.com/api/#access-tokens--token-scopes.","code":""},{"path":"https://docs.ropensci.org/mapscanner/reference/set_mapbox_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set 'mapbox' token — set_mapbox_token","text":"TRUE token able set; otherwise FALSE.","code":""}]
